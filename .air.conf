# 工作目录
root = "."
tmp_dir = "tmp"

[build]
cmd = "go build -o tmp\main.exe ."

bin = "tmp\main.exe"

full_bin = "APP_ENV=dev APP_USER=air ./tmp/main"

# 监控文件类型
include_ext = ["go", "tpl", "tmpl", "html", "css", "js", "json", "yml", "yaml", "sql","yaml"]

#排除目录
exclude_dir = ["assets", "tmp", "vendor", "frontend/node_modules", ".git", ".github", ".vscode", "docs", "logs"]

#核心代码目录
include_dir = ["internal", "pkg", "cmd"]

# 特别排除的文件 - 添加常见的临时文件
exclude_file = ["*_test.go", "*.log", "*.sum", "*.mod"]
# 如果文件更改过于频繁，则没有必要在每次更改时都触发构建。可以设置触发构建的延迟时间
delay = 1000 # ms

# 发生构建错误时，停止运行旧的二进制文件。
stop_on_error = false

# air的日志文件名，该日志文件放置在你的`tmp_dir`中
log = "air_errors.log"

[log]
# 显示日志时间
time = true

[color]
# 自定义每个部分显示的颜色。如果找不到颜色，使用原始的应用程序日志。
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"
app = "blue"
error = "red"

[misc]
# 退出时删除tmp目录
clean_on_exit = true