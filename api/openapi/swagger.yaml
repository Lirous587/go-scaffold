basePath: /api/v1
definitions:
  domain.VerifyWay:
    enum:
    - image:click
    type: string
    x-enum-varnames:
    - WayImageClick
  handler.CaptchaAnswerResponse:
    properties:
      audio:
        description: 音频验证码
        type: string
      id:
        example: "0"
        type: string
      image:
        description: 主图片
        type: string
      thumb:
        description: 缩略图
        type: string
      value:
        type: string
      way:
        $ref: '#/definitions/domain.VerifyWay'
    type: object
  handler.CaptchaResponse:
    properties:
      audio:
        description: 音频验证码
        type: string
      id:
        example: "0"
        type: string
      image:
        description: 主图片
        type: string
      thumb:
        description: 缩略图
        type: string
    type: object
  handler.CreateRequest:
    properties:
      description:
        maxLength: 60
        type: string
      title:
        maxLength: 30
        type: string
    required:
    - title
    type: object
  handler.TestListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/handler.TestResponse'
        type: array
      total:
        type: integer
    type: object
  handler.TestResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  handler.UpdateRequest:
    properties:
      description:
        maxLength: 60
        type: string
      title:
        maxLength: 30
        type: string
    required:
    - title
    type: object
  response.errorResponse:
    properties:
      code:
        type: integer
      details:
        additionalProperties: true
        type: object
      message:
        example: Internal server error
        type: string
    type: object
  response.invalidParamsResponse:
    properties:
      code:
        type: integer
      details:
        additionalProperties: true
        type: object
      message:
        example: invalid params
        type: string
    type: object
  response.successResponse:
    properties:
      code:
        example: 2000
        type: integer
      data: {}
      message:
        example: 请求成功
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: lirous@lirous.com
    name: Lirous
    url: https://Lirous.com
  description: 自定义描述
  license:
    name: MIT
    url: https://github.com/Lirous587/go-scaffold/main/LICENSE
  termsOfService: https://Lirous.com
  title: 自定义title
  version: "1.0"
paths:
  /captcha:
    post:
      consumes:
      - application/json
      description: 创建新的验证码
      parameters:
      - enum:
        - image:click
        in: query
        name: way
        type: string
        x-enum-varnames:
        - WayImageClick
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建验证码
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CaptchaResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 生成验证码
      tags:
      - captcha
  /captcha/with-answer:
    get:
      consumes:
      - application/json
      description: 创建新的验证码并返回答案（仅用于测试或开发环境）
      parameters:
      - enum:
        - image:click
        in: query
        name: way
        type: string
        x-enum-varnames:
        - WayImageClick
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建验证码并返回答案
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CaptchaAnswerResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 生成带答案的验证码
      tags:
      - captcha
  /test:
    get:
      consumes:
      - application/json
      description: 根据查询参数获取Test列表，返回当前页数据和total数量
      parameters:
      - description: 关键词搜索
        in: query
        name: keyword
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Test列表
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TestListResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 获取 Test 列表
      tags:
      - test
    post:
      consumes:
      - application/json
      description: 创建新的 Test
      parameters:
      - description: 创建 Test 请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建 Test
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TestResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 创建 Test
      tags:
      - test
  /test/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除 Test
      parameters:
      - description: Test ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功删除 Test
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除 Test
      tags:
      - test
    get:
      consumes:
      - application/json
      description: 读取单条 Test
      parameters:
      - description: Test ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建 Test
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TestResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 读取单条 Test
      tags:
      - test
    put:
      consumes:
      - application/json
      description: 根据ID更新 Test 信息
      parameters:
      - description: Test ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新 Test 请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功更新 Test
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TestResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 更新 Test
      tags:
      - test
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
